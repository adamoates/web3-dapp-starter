services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dapp_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongo:
    image: mongo:6
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - "6379:6379"

  # Local Hardhat blockchain for Web3 testing
  hardhat:
    build:
      context: ./smart-contracts
      dockerfile: Dockerfile.hardhat
    ports:
      - "8545:8545"
    volumes:
      - ./smart-contracts:/app
      - /app/node_modules
    command: npx hardhat node --hostname 0.0.0.0
    restart: unless-stopped

  backend:
    build: ./backend
    ports:
      - "5001:5000"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dapp_db
      MONGODB_URI: mongodb://mongo:27017/dapp_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      SMTP_HOST: mailpit
      SMTP_PORT: 1025
      SMTP_USER:
      SMTP_PASS:
      WEB3_PROVIDER_URL: http://host.docker.internal:8545
    depends_on:
      - postgres
      - mongo
      - redis
      - mailpit
      - hardhat
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      CHOKIDAR_USEPOLLING: true
      REACT_APP_API_URL: http://localhost:5001
    volumes:
      - ./frontend:/app:cached
      - /app/node_modules
    depends_on:
      - backend
    stdin_open: true
    tty: true

  redisinsight:
    image: redis/redisinsight:latest
    ports:
      - "8001:8001"
    depends_on:
      - redis
    restart: unless-stopped
    volumes:
      - redisinsight_data:/db

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dapp.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongo
    restart: unless-stopped

  mailpit:
    image: axllent/mailpit
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    restart: unless-stopped

  minio-client:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        sleep 5;
        mc alias set local http://minio:9000 minioadmin minioadmin;
        mc mb -p local/dapp-files;
        mc anonymous set download local/dapp-files;
        exit 0;
      "

volumes:
  pgdata:
  mongodata:
  pgadmin_data:
  redisinsight_data:
  minio_data:
